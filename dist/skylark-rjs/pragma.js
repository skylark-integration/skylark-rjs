/**
 * skylark-rjs - A version of rjs that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./parse","./logger"],function(parse,logger){"use strict";function Temp(){}function create(e,n){Temp.prototype=e;var i,s=new Temp;if(Temp.prototype=null,n)for(i in n)n.hasOwnProperty(i)&&!s.hasOwnProperty(i)&&(s[i]=n[i]);return s}var pragma={conditionalRegExp:/(exclude|include)Start\s*\(\s*["'](\w+)["']\s*,(.*)\)/,useStrictRegExp:/(^|[^{]\r?\n)['"]use strict['"];/g,hasRegExp:/has\s*\(\s*['"]([^'"]+)['"]\s*\)/g,configRegExp:/(^|[^\.])(requirejs|require)(\.config)\s*\(/g,nsWrapRegExp:/\/\*requirejs namespace: true \*\//,apiDefRegExp:/var requirejs,\s*require,\s*define;/,defineCheckRegExp:/typeof(\s+|\s*\(\s*)define(\s*\))?\s*===?\s*["']function["']\s*&&\s*define\s*\.\s*amd/g,defineStringCheckRegExp:/typeof\s+define\s*===?\s*["']function["']\s*&&\s*define\s*\[\s*["']amd["']\s*\]/g,defineTypeFirstCheckRegExp:/\s*["']function["']\s*==(=?)\s*typeof\s+define\s*&&\s*define\s*\.\s*amd/g,defineJQueryRegExp:/typeof\s+define\s*===?\s*["']function["']\s*&&\s*define\s*\.\s*amd\s*&&\s*define\s*\.\s*amd\s*\.\s*jQuery/g,defineHasRegExp:/typeof\s+define\s*==(=)?\s*['"]function['"]\s*&&\s*typeof\s+define\.amd\s*==(=)?\s*['"]object['"]\s*&&\s*define\.amd/g,defineTernaryRegExp:/typeof\s+define\s*===?\s*['"]function["']\s*&&\s*define\s*\.\s*amd\s*\?\s*define/,defineExistsRegExp:/\s+typeof\s+define\s*!==?\s*['"]undefined["']\s*/,defineExistsAndAmdRegExp:/typeof\s+define\s*!==?\s*['"]undefined["']\s*&&\s*define\s*\.\s*amd\s*/,amdefineRegExp:/if\s*\(\s*typeof define\s*\!==\s*['"]function['"]\s*\)\s*\{\s*[^\{\}]+amdefine[^\{\}]+\}/g,removeStrict:function(e,n){return n.useStrict?e:e.replace(pragma.useStrictRegExp,"$1")},namespace:function(e,n,i){return n&&(e=e.replace(pragma.configRegExp,"$1"+n+".$2$3("),e=(e=(e=(e=(e=(e=(e=(e=(e=parse.renameNamespace(e,n)).replace(pragma.defineTernaryRegExp,"typeof "+n+".define === 'function' && "+n+".define.amd ? "+n+".define")).replace(pragma.defineJQueryRegExp,"typeof "+n+".define === 'function' && "+n+".define.amd && "+n+".define.amd.jQuery")).replace(pragma.defineHasRegExp,"typeof "+n+".define === 'function' && typeof "+n+".define.amd === 'object' && "+n+".define.amd")).replace(pragma.defineExistsAndAmdRegExp,"typeof "+n+".define !== 'undefined' && "+n+".define.amd")).replace(pragma.defineCheckRegExp,"typeof "+n+".define === 'function' && "+n+".define.amd")).replace(pragma.defineStringCheckRegExp,"typeof "+n+".define === 'function' && "+n+".define['amd']")).replace(pragma.defineTypeFirstCheckRegExp,"'function' === typeof "+n+".define && "+n+".define.amd")).replace(pragma.defineExistsRegExp,"typeof "+n+".define !== 'undefined'"),pragma.apiDefRegExp.test(e)&&-1===e.indexOf("if (!"+n+" || !"+n+".requirejs)")&&(e="var "+n+";(function () { if (!"+n+" || !"+n+".requirejs) {\nif (!"+n+") { "+n+" = {}; } else { require = "+n+"; }\n"+e+"\n"+n+".requirejs = requirejs;"+n+".require = require;"+n+".define = define;\n}\n}());"),pragma.nsWrapRegExp.test(e)&&(e="(function () {\nvar require = "+n+".require,requirejs = "+n+".requirejs,define = "+n+".define;\n"+(e=e.replace(pragma.nsWrapRegExp,""))+"\n}());")),e},process:function(fileName,fileContents,config,onLifecycleName,pluginCollector){var foundIndex=-1,startIndex=0,lineEndIndex,conditionLine,matches,type,marker,condition,isTrue,endRegExp,endMatches,endMarkerIndex,shouldInclude,startLength,lifecycleHas,deps,i,dep,moduleName,collectorMod,lifecyclePragmas,pragmas=config.pragmas,hasConfig=config.has,kwArgs=pragmas;if(onLifecycleName&&(lifecyclePragmas=config["pragmas"+onLifecycleName],lifecycleHas=config["has"+onLifecycleName],lifecyclePragmas&&(pragmas=create(pragmas||{},lifecyclePragmas)),lifecycleHas&&(hasConfig=create(hasConfig||{},lifecycleHas))),hasConfig&&(fileContents=fileContents.replace(pragma.hasRegExp,function(e,n){return hasConfig.hasOwnProperty(n)?!!hasConfig[n]:e})),!config.skipPragmas)for(;-1!==(foundIndex=fileContents.indexOf("//>>",startIndex));)if(lineEndIndex=fileContents.indexOf("\n",foundIndex),-1===lineEndIndex&&(lineEndIndex=fileContents.length-1),startIndex=lineEndIndex+1,conditionLine=fileContents.substring(foundIndex,lineEndIndex+1),matches=conditionLine.match(pragma.conditionalRegExp),matches){type=matches[1],marker=matches[2],condition=matches[3],isTrue=!1;try{isTrue=!!eval("("+condition+")")}catch(e){throw"Error in file: "+fileName+". Conditional comment: "+conditionLine+" failed with this error: "+e}if(endRegExp=new RegExp("\\/\\/\\>\\>\\s*"+type+"End\\(\\s*['\"]"+marker+"['\"]\\s*\\)","g"),endMatches=endRegExp.exec(fileContents.substring(startIndex,fileContents.length)),!endMatches)throw"Error in file: "+fileName+". Cannot find end marker for conditional comment: "+conditionLine;endMarkerIndex=startIndex+endRegExp.lastIndex-endMatches[0].length,lineEndIndex=fileContents.indexOf("\n",endMarkerIndex),-1===lineEndIndex&&(lineEndIndex=fileContents.length-1),shouldInclude="exclude"===type&&!isTrue||"include"===type&&isTrue,startLength=startIndex-foundIndex,fileContents=fileContents.substring(0,foundIndex)+(shouldInclude?fileContents.substring(startIndex,endMarkerIndex):"")+fileContents.substring(lineEndIndex+1,fileContents.length),startIndex=foundIndex}if(config.optimizeAllPluginResources&&pluginCollector)try{if(deps=parse.findDependencies(fileName,fileContents),deps.length)for(i=0;i<deps.length;i++)dep=deps[i],-1!==dep.indexOf("!")&&(moduleName=dep.split("!")[0],collectorMod=pluginCollector[moduleName],collectorMod||(collectorMod=pluginCollector[moduleName]=[]),collectorMod.push(dep))}catch(e){logger.error("Parse error looking for plugin resources in "+fileName+", skipping.")}return config.keepAmdefine||(fileContents=fileContents.replace(pragma.amdefineRegExp,"")),"OnSave"===onLifecycleName&&config.namespace&&(fileContents=pragma.namespace(fileContents,config.namespace,onLifecycleName)),pragma.removeStrict(fileContents,config)}};return pragma});
//# sourceMappingURL=sourcemaps/pragma.js.map
