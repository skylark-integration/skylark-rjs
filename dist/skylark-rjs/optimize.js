/**
 * skylark-rjs - A version of rjs that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./lang","./logger","./parse","./pragma","./uglifyjs","./source-map"],function(e,r,i,t,n,s){"use strict";var p,a=/\@import\s+(url\()?\s*([^);]+)\s*(\))?([\w, ]*)(;)?/gi,o=/\/\*[^\*]*@import[^\*]*\*\//g,l=/\url\(\s*([^\)]+)\s*\)?/g,c=/^\w+:/;s.SourceMapGenerator,s.SourceMapConsumer;function u(e){return"'"!==(e=e.replace(/\s+$/,"")).charAt(0)&&'"'!==e.charAt(0)||(e=e.substring(1,e.length-1)),e}function f(i,t,n,s){return n.replace(l,function(n,p){var a,o,l,f,m=u(p);for(a=(m=m.replace(e.backSlashRegExp,"/")).charAt(0),o=c.test(m),"/"===a||"#"===a||o?o||r.trace(i+"\n  URL not a relative URL, skipping: "+p):p=s+t+m,f=(l=p.split("/")).length-1;f>0;f--)"."===l[f]?l.splice(f,1):".."===l[f]&&0!==f&&".."!==l[f-1]&&(l.splice(f-1,2),f-=1);return"url("+l.join("/")+")"})}return p={jsFile:function(e,r,i,t,n){var s=t.env.fs;r||(r=s.readFile(e)),r=p.js(e,r,i,t,n),s.saveUtf8File(i,r)},js:function(e,n,s,a,o){var l,c,u=String(a.optimize).split("."),f=u[0],m="keepLines"===u[1],g="";if(a=a||{},n=t.process(e,n,a,"OnSave",o),f&&"none"!==f){if(!(l=p.optimizers[f]))throw new Error('optimizer with name of "'+f+'" not found for this environment');c=a[f]||{},a.generateSourceMaps&&(c.generateSourceMaps=!!a.generateSourceMaps,c._buildSourceMap=a._buildSourceMap);try{if(a.preserveLicenseComments)try{g=i.getLicenseComments(e,n)}catch(r){throw new Error("Cannot parse file: "+e+" for comments. Skipping it. Error is:\n"+r.toString())}a.generateSourceMaps&&g&&(c.preamble=g,g=""),n=g+l(e,n,s,m,c,a.env.fs),c._buildSourceMap&&c._buildSourceMap!==a._buildSourceMap&&(a._buildSourceMap=c._buildSourceMap)}catch(e){if(a.throwWhen&&a.throwWhen.optimize)throw e;r.error(e)}}else a._buildSourceMap&&(a._buildSourceMap=null);return n},cssFile:function(i,t,n){var s,p,l,c,m=n.env.fs,g=m.readFile(i),d=function i(t,n,s,p,l,c,m){var g=(t=t.replace(e.backSlashRegExp,"/")).lastIndexOf("/"),d=-1!==g?t.substring(0,g+1):"",S=[],h=[],b=m.env.fs;return n=n.replace(o,""),s&&","!==s.charAt(s.length-1)&&(s+=","),n=n.replace(a,function(n,a,o,c,g){if(g&&"all"!==g.replace(/^\s\s*/,"").replace(/\s\s*$/,""))return h.push(t),n;if(o=u(o),s&&-1!==s.indexOf(o+","))return n;o=o.replace(e.backSlashRegExp,"/");try{var M,v,x="/"===o.charAt(0)?o:d+o,L=b.readFile(x);return l[x]?"":(l[x]=!0,L=(v=i(x,L,s,p,l,!1,m)).fileContents,v.importList.length&&S.push.apply(S,v.importList),v.skippedList.length&&h.push.apply(h,v.skippedList),L=f(o,(-1!==(M=o.lastIndexOf("/"))?o.substring(0,M+1):"").replace(/^\.\//,""),L,p),S.push(x),L)}catch(e){return r.warn(t+"\n  Cannot inline css import, skipping: "+o),n}}),p&&c&&(n=f(t,"",n,p)),{importList:S,skippedList:h,fileContents:n}}(i,g,n.cssImportIgnore,n.cssPrefix,{},!0,n),S=d.skippedList.length?g:d.fileContents;d.skippedList.length&&r.warn("Cannot inline @imports for "+i+",\nthe following files had media queries in them:\n"+d.skippedList.join("\n"));try{if(-1===n.optimizeCss.indexOf(".keepComments"))for(s=0;-1!==(s=S.indexOf("/*",s));){if(-1===(p=S.indexOf("*/",s+2)))throw"Improper comment in CSS file: "+i;c=S.substring(s,p),!n.preserveLicenseComments||-1===c.indexOf("license")&&-1===c.indexOf("opyright")&&-1===c.indexOf("(c)")?(S=S.substring(0,s)+S.substring(p+2,S.length),s=0):s=p}S=-1===n.optimizeCss.indexOf(".keepLines")?(S=(S=(S=S.replace(/[\r\n]/g," ")).replace(/\s+/g," ")).replace(/\{\s/g,"{")).replace(/\s\}/g,"}"):(S=S.replace(/(\r\n)+/g,"\r\n")).replace(/(\n)+/g,"\n"),-1===n.optimizeCss.indexOf(".keepWhitespace")&&(S=(S=(S=(S=(S=(S=S.replace(/^[ \t]+/gm,"")).replace(/[ \t]+$/gm,"")).replace(/(;|:|\{|}|,)[ \t]+/g,"$1")).replace(/[ \t]+(\{)/g,"$1")).replace(/([ \t])+/g,"$1")).replace(/^[ \t]*[\r\n]/gm,""))}catch(e){S=g,r.error("Could not optimized CSS file: "+i+", error: "+e)}return m.saveUtf8File(t,S),l="\n"+t.replace(n.dir,"")+"\n----------------\n",d.importList.push(i),l+=d.importList.map(function(e){return e.replace(n.dir,"")}).join("\n"),{importList:d.importList,buildText:l+"\n"}},css:function(e,i){var t,n,s,a,o="",l=[],c=i.dir&&i.removeCombined,u=i.env.fs;if(-1!==i.optimizeCss.indexOf("standard")){if(a=u.getFilteredFileList(e,/\.css$/,!0))for(t=0;t<a.length;t++)n=a[t],r.trace("Optimizing ("+i.optimizeCss+") CSS file: "+n),o+=(s=p.cssFile(n,n,i)).buildText,c&&(s.importList.pop(),l=l.concat(s.importList));c&&l.forEach(function(e){u.exists(e)&&u.deleteFile(e)})}return o},optimizers:{uglify:function(i,t,s,p,a,o){var l,c,u,f={},m=s+".map",g=i&&i.split("/").pop();a=a||{},e.mixin(f,a,!0),a.preamble&&(f.output={preamble:a.preamble}),a.generateSourceMaps&&(s||a._buildSourceMap)&&(f.outSourceMap=g+".map",a._buildSourceMap?(c=JSON.parse(a._buildSourceMap),f.inSourceMap=c):o.exists(m)&&(f.inSourceMap=m,c=JSON.parse(o.readFile(m)))),r.trace("Uglify file: "+i);try{l=n.minify(t,f,g+".src.js"),f.outSourceMap&&l.map?(u=l.map,c||a._buildSourceMap||o.saveFile(s+".src.js",t),t=l.code,a._buildSourceMap?a._buildSourceMap=u:o.saveFile(s+".map",u)):t=l.code}catch(e){var d=e.toString(),S=/SyntaxError/.test(d);throw console.error(e),new Error("Cannot uglify file: "+i+". Skipping it. Error is:\n"+d+(S?"\n\nIf the source uses ES2015 or later syntax, please pass \"optimize: 'none'\" to r.js and use an ES2015+ compatible minifier after running r.js. The included UglifyJS only understands ES5 or earlier syntax.":""))}return t}}}});
//# sourceMappingURL=sourcemaps/optimize.js.map
