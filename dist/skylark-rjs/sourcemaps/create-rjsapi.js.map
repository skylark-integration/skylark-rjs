{"version":3,"sources":["create-rjsapi.js"],"names":["define","requirejs","optimize","config","callback","errback","context","build","logger","quit","done","result","_buildReset","_cacheReset","Error","logLevel","hasOwnProperty","SILENT","err","console","log","then","tools","useLib","contextName","useLibLoaded","loadLib","req"],"mappings":";;;;;;;AAAAA,QACC,SACC,SAASC,GAmFP,OAlFA,WAGIA,EAAUC,SAAW,SAAUC,EAAQC,EAAUC,GAkD7CJ,GACIK,QAAS,UACT,QAAS,SAAU,gBA5CR,SAAUC,EAAOC,EAAQC,GAepC,SAASC,EAAKC,GASV,GANIV,EAAUW,cACVX,EAAUW,cACVX,EAAUY,eAIVF,aAAkBG,MACpB,MAAMH,EAGR,OAAOA,EAzBXR,EAAOY,SAAWZ,EAAOa,eAAe,YACtBb,EAAOY,SAAWP,EAAOS,OAMvChB,EAAUW,cACVX,EAAUW,cACVX,EAAUY,eAmBdR,EAAUA,GAAW,SAAUa,GAI3BC,QAAQC,IAAIF,GACZT,EAAK,IAGTF,EAAMJ,GAAQkB,KAAKX,EAAMA,GAAMW,KAAKjB,EAAUC,MAQtDJ,EAAUqB,OACNC,OAAQ,SAAUC,EAAapB,GACtBA,IACDA,EAAWoB,EACXA,EAAc,UAGbC,aAAaD,KACdE,UACAD,aAAaD,IAAe,GAGhC,IAAIG,EAAM1B,GACNK,QAASkB,IAGbG,GAAK,SAAU,WACXvB,EAASuB","file":"../create-rjsapi.js","sourcesContent":["define([\r\n\t\"./rjs\"\r\n],function(requirejs){\r\n    function createRjsApi() {\r\n        //Create a method that will run the optimzer given an object\r\n        //config.\r\n        requirejs.optimize = function (config, callback, errback) {\r\n            ///if (!loadedOptimizedLib) {\r\n            ///    loadLib();\r\n            ///    loadedOptimizedLib = true;\r\n            ///}\r\n\r\n            //Create the function that will be called once build modules\r\n            //have been loaded.\r\n            var runBuild = function (build, logger, quit) {\r\n                //Make sure config has a log level, and if not,\r\n                //make it \"silent\" by default.\r\n                config.logLevel = config.hasOwnProperty('logLevel') ?\r\n                                  config.logLevel : logger.SILENT;\r\n\r\n                //Reset build internals first in case this is part\r\n                //of a long-running server process that could have\r\n                //exceptioned out in a bad state. It is only defined\r\n                //after the first call though.\r\n                if (requirejs._buildReset) {\r\n                    requirejs._buildReset();\r\n                    requirejs._cacheReset();\r\n                }\r\n\r\n                function done(result) {\r\n                    //And clean up, in case something else triggers\r\n                    //a build in another pathway.\r\n                    if (requirejs._buildReset) {\r\n                        requirejs._buildReset();\r\n                        requirejs._cacheReset();\r\n                    }\r\n\r\n                    // Ensure errors get propagated to the errback\r\n                    if (result instanceof Error) {\r\n                      throw result;\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n\r\n                errback = errback || function (err) {\r\n                    // Using console here since logger may have\r\n                    // turned off error logging. Since quit is\r\n                    // called want to be sure a message is printed.\r\n                    console.log(err);\r\n                    quit(1);\r\n                };\r\n\r\n                build(config).then(done, done).then(callback, errback);\r\n            };\r\n\r\n            requirejs({\r\n                context: 'build'\r\n            }, ['build', 'logger', 'env!env/quit'], runBuild);\r\n        };\r\n\r\n        requirejs.tools = {\r\n            useLib: function (contextName, callback) {\r\n                if (!callback) {\r\n                    callback = contextName;\r\n                    contextName = 'uselib';\r\n                }\r\n\r\n                if (!useLibLoaded[contextName]) {\r\n                    loadLib();\r\n                    useLibLoaded[contextName] = true;\r\n                }\r\n\r\n                var req = requirejs({\r\n                    context: contextName\r\n                });\r\n\r\n                req(['build'], function () {\r\n                    callback(req);\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    return createRjsApi;\r\n\r\n});"]}